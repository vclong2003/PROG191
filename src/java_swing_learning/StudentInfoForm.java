/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_swing_learning;

import java.io.IOException;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author vclon
 */
public class StudentInfoForm extends javax.swing.JFrame {

    /**
     * Creates new form StudentInfoForm
     */
    private DefaultTableModel infoTableModel;
    private Student selectedStudent;
    private ButtonGroup genderBtnGroup;
    private DefaultTableModel markReportTableModel;
    private DefaultComboBoxModel addCourseComboBoxModel;

    public StudentInfoForm() {
        initComponents();

        String[] studentInfoTableColumn = {"ID", "Name", "Age", "Gender", "Address"};
        infoTableModel = new DefaultTableModel(studentInfoTableColumn, 0);
        infoTable.setModel(infoTableModel);

        genderBtnGroup = new ButtonGroup();
        genderBtnGroup.add(maleBtn);
        genderBtnGroup.add(femaleBtn);

        String[] markReportTableColumn = {"Course", "Mark"};
        markReportTableModel = new DefaultTableModel(markReportTableColumn, 0);
        markReportTable.setModel(markReportTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTable = new javax.swing.JTable();
        nameField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        ageField = new javax.swing.JTextField();
        maleBtn = new javax.swing.JRadioButton();
        femaleBtn = new javax.swing.JRadioButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        markHandlingPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        markReportTable = new javax.swing.JTable();
        updateMarkBtn = new javax.swing.JButton();
        markReportLabel = new javax.swing.JLabel();
        addCourseLabel = new javax.swing.JLabel();
        addCourseComboBox = new javax.swing.JComboBox<>();
        addCourseBtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        clearSearchBtn = new javax.swing.JButton();
        editCoursesBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Student Management");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        setLocation(new java.awt.Point(300, 150));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        infoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        infoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(infoTable);

        idLabel.setText("Student ID");

        addressTextArea.setColumns(20);
        addressTextArea.setRows(5);
        addressTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setViewportView(addressTextArea);

        maleBtn.setText("Male");

        femaleBtn.setText("Female");

        deleteBtn.setText("Delete");
        deleteBtn.setActionCommand("addBtn");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.setActionCommand("deleteBtn");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        jLabel2.setText("Age");

        jLabel3.setText("Gender");

        jLabel4.setText("Address");

        markReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        markReportTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                markReportTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(markReportTable);

        updateMarkBtn.setText("Update marks");
        updateMarkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMarkBtnActionPerformed(evt);
            }
        });

        markReportLabel.setText("Mark report");

        addCourseLabel.setText("Add");

        addCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addCourseBtn.setText("Add");
        addCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout markHandlingPanelLayout = new javax.swing.GroupLayout(markHandlingPanel);
        markHandlingPanel.setLayout(markHandlingPanelLayout);
        markHandlingPanelLayout.setHorizontalGroup(
            markHandlingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, markHandlingPanelLayout.createSequentialGroup()
                .addGroup(markHandlingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(markHandlingPanelLayout.createSequentialGroup()
                        .addComponent(addCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(markHandlingPanelLayout.createSequentialGroup()
                        .addComponent(markReportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGroup(markHandlingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(markHandlingPanelLayout.createSequentialGroup()
                        .addComponent(addCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addCourseBtn))
                    .addGroup(markHandlingPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateMarkBtn)))
                .addGap(29, 29, 29))
        );
        markHandlingPanelLayout.setVerticalGroup(
            markHandlingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(markHandlingPanelLayout.createSequentialGroup()
                .addGroup(markHandlingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(markReportLabel)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, markHandlingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(updateMarkBtn)
                        .addGap(37, 37, 37)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(markHandlingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseLabel)
                    .addComponent(addCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCourseBtn))
                .addGap(37, 37, 37))
        );

        jLabel5.setText("Search by name/id:");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        clearSearchBtn.setText("Clear");
        clearSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSearchBtnActionPerformed(evt);
            }
        });

        editCoursesBtn.setText("Edit Courses");
        editCoursesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCoursesBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(204, 204, 204));
        resetBtn.setForeground(new java.awt.Color(255, 0, 51));
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resetBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearSearchBtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editCoursesBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(addBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(deleteBtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(cancelBtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(markHandlingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(16, 16, 16)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(maleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(femaleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(0, 5, Short.MAX_VALUE)))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(clearSearchBtn)
                    .addComponent(editCoursesBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maleBtn)
                            .addComponent(femaleBtn)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(markHandlingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteBtn)
                            .addComponent(updateBtn)
                            .addComponent(addBtn)
                            .addComponent(cancelBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadDataToTable(String searchValue) {//null to ignore searchValue

        this.toggleElements(false);
        this.infoTableModel.setRowCount(0);

        for (Student var : App.studentList) {
            int id = var.getId();
            String name = var.getName();
            int age = var.getAge();
            String gender = (var.getGender() == 0) ? "Male" : "Female";
            String address = var.getAddress();

            if (searchValue != null) {
                if (Integer.toString(id).equals(searchValue) || name.toLowerCase().contains(searchValue.toLowerCase())) {
                    Object[] row = new Object[]{id, name, age, gender, address};
                    infoTableModel.addRow(row);
                }
            } else {
                Object[] row = new Object[]{id, name, age, gender, address};
                infoTableModel.addRow(row);
            }

        }
    }

    private void loadDetailedInfo() {

        this.toggleElements(true);

        this.idLabel.setText("Student ID: " + this.selectedStudent.getId());
        this.nameField.setText(this.selectedStudent.getName());
        this.ageField.setText(String.valueOf(this.selectedStudent.getAge()));
        this.addressTextArea.setText(this.selectedStudent.getAddress());

        if (this.selectedStudent.getGender() == 0) {
            this.maleBtn.setSelected(true);
        } else {
            this.femaleBtn.setSelected(true);
        }

        this.loadMarkReport();
    }

    private void loadMarkReport() {
        markReportTableModel.setRowCount(0);

        for (Course var : this.selectedStudent.getCourses()) {
            String courseName = var.getCourseName();

            String mark;
            if (var.getMark() == -1) {
                mark = "";
            } else {
                mark = Integer.toString(var.getMark());
            }
            Object[] row = new Object[]{courseName, mark};
            markReportTableModel.addRow(row);
        }
    }

    public void loadCourses() {
        if (Course.courses != null) {
            addCourseComboBoxModel = new DefaultComboBoxModel(Course.courses.toArray());
            addCourseComboBox.setModel(addCourseComboBoxModel);
        }
    }

    private void toggleElements(boolean isVisible) {
        this.idLabel.setText("Student ID: ");
        this.nameField.setText("");
        this.ageField.setText("");
        this.addressTextArea.setText("");
        this.genderBtnGroup.clearSelection();

        this.updateBtn.setVisible(isVisible);
        this.deleteBtn.setVisible(isVisible);
        this.cancelBtn.setVisible(isVisible);

        this.markHandlingPanel.setVisible(isVisible);
    }

    private void infoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoTableMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = infoTable.getSelectedRow();
        int selectedId = (Integer) infoTable.getValueAt(selectedRowIndex, 0);

        for (Student var : App.studentList) {
            if (var.getId() == selectedId) {
                this.selectedStudent = var;
            }
        }
        this.loadDetailedInfo();
    }//GEN-LAST:event_infoTableMouseClicked

    private void addCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseBtnActionPerformed
        // TODO add your handling code here:
        String courseName = this.addCourseComboBox.getSelectedItem().toString();
        if (this.selectedStudent.addCourse(courseName)) {
            loadMarkReport();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Course existed!", "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addCourseBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        String name = this.nameField.getText();
        int age;
        int gender;
        String address = this.addressTextArea.getText();

        if ("".equals(name)) {
            JOptionPane.showMessageDialog(rootPane, "Plese enter name!", "", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (this.ageField.getText().matches("[0-9]+")) {
            age = Integer.parseInt(this.ageField.getText());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Plese enter vaid age!", "", JOptionPane.ERROR_MESSAGE);
            return;

        }
        if (this.maleBtn.isSelected() || this.femaleBtn.isSelected()) {
            gender = (this.maleBtn.isSelected()) ? 0 : 1;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Plese select gender!", "", JOptionPane.ERROR_MESSAGE);
            return;
        }

        App.studentList.add(new Student(name, address, age, gender));
        this.loadDataToTable(null);

    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        String name = this.nameField.getText();
        int age = Integer.parseInt(this.ageField.getText());
        int gender = (this.maleBtn.isSelected()) ? 0 : 1;
        String address = this.addressTextArea.getText();

        this.selectedStudent.setName(name);
        this.selectedStudent.setAge(age);
        this.selectedStudent.setGender(gender);
        this.selectedStudent.setAddress(address);

        // this.loadDataToTable(null);
        //update row
        int selectedRowIndex = infoTable.getSelectedRow();
        infoTableModel.setValueAt(name, selectedRowIndex, 1);
        infoTableModel.setValueAt(age, selectedRowIndex, 2);
        infoTableModel.setValueAt((gender == 0) ? "Male" : "Female", selectedRowIndex, 3);
        infoTableModel.setValueAt(address, selectedRowIndex, 4);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        App.studentList.remove(this.selectedStudent);
        this.loadDataToTable(null);
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        this.infoTable.clearSelection();
        this.toggleElements(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void updateMarkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMarkBtnActionPerformed
        // TODO add your handling code here:
        if (this.markReportTable.getCellEditor() != null) {
            this.markReportTable.getCellEditor().stopCellEditing();
        }
        int tableLength = this.markReportTable.getRowCount();

        for (int i = 0; i < tableLength; i++) {

            String courseName = this.markReportTable.getValueAt(i, 0).toString();
            String rawMark = this.markReportTable.getValueAt(i, 1).toString();
            int mark;
            if (rawMark.matches("[0-9]+")) {
                mark = Integer.parseInt(rawMark);
            } else if ("".equals(rawMark)) {
                mark = -1;
            } else {
                JOptionPane.showMessageDialog(rootPane, "Plese enter valid mark!", "", JOptionPane.ERROR_MESSAGE);
                return;
            }

            this.selectedStudent.setMark(courseName, mark);
        }

        this.loadMarkReport();
    }//GEN-LAST:event_updateMarkBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            // TODO add your handling code here:
            App.writeDataToFile();
        } catch (IOException ex) {
            System.err.println(ex);
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchValue = this.searchField.getText();
        this.loadDataToTable(searchValue);
    }//GEN-LAST:event_searchBtnActionPerformed

    private void clearSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSearchBtnActionPerformed
        // TODO add your handling code here:
        this.searchField.setText("");
        this.loadDataToTable(null);
    }//GEN-LAST:event_clearSearchBtnActionPerformed

    private void markReportTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_markReportTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_markReportTableMouseClicked

    private void editCoursesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCoursesBtnActionPerformed
        // TODO add your handling code here:
        App.courseManagementFrom.setVisible(true);
    }//GEN-LAST:event_editCoursesBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.loadCourses();
        this.loadDataToTable(null);
    }//GEN-LAST:event_formWindowOpened

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(rootPane, "Do you really want to reset the program, this action cannot be undone!", "Reset confirm",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE); // yes = 0, no = 1
        if (result == 0) {
            try {
                // TODO add your handling code here:
                App.deleteDataFile();
            } catch (IOException ex) {
                System.err.println(ex);
            }
            System.exit(0);
        }
    }//GEN-LAST:event_resetBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentInfoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentInfoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentInfoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentInfoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton addCourseBtn;
    private javax.swing.JComboBox<String> addCourseComboBox;
    private javax.swing.JLabel addCourseLabel;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JTextField ageField;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton clearSearchBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editCoursesBtn;
    private javax.swing.JRadioButton femaleBtn;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTable infoTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton maleBtn;
    private javax.swing.JPanel markHandlingPanel;
    private javax.swing.JLabel markReportLabel;
    private javax.swing.JTable markReportTable;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton updateMarkBtn;
    // End of variables declaration//GEN-END:variables
}
